"""
Django settings for recipe_haven project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url

# If 'env.py' exists, import it (used for environment variables)
if os.path.isfile('env.py'):
    import env

# Importing message constants from Django's built-in messages framework
from django.contrib.messages import constants as messages

# Cloudinary configuration for media file storage
import cloudinary
import cloudinary.uploader
import cloudinary.api

# Configuration for Cloudinary media storage
CLOUDINARY_STORAGE = {
    'CLOUD_NAME': 'dfuow5lo6',
    'API_KEY': '977516553948292',
    'API_SECRET': 'AAaX-BtCUrpzJfFptRAgxGIGc2Y',
}

# Explicitly mapping Django's message levels to Bootstrap's alert classes for
consistent styling
MESSAGE_TAGS = {
    messages.DEBUG: 'debug',          # Maps DEBUG messages to 'debug' class.
    messages.INFO: 'info',            """ Maps INFO messages to 'info' class
    (useful for informational alerts)."""
    messages.SUCCESS: 'success',      """ Maps SUCCESS messages to 'success'
    class (for success notifications)."""
    messages.WARNING: 'warning',      """ Maps WARNING messages to 'warning'
    class (for caution alerts)."""
    messages.ERROR: 'danger',         """ Maps ERROR messages to 'danger' class
    (for critical errors)."""
}

# Default storage backend for media files to Cloudinary
DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'

# Base directory path for the project
BASE_DIR = Path(__file__).resolve().parent.parent

# Secret key for the project (retrieved from environment variables)
SECRET_KEY = os.environ.get("SECRET_KEY")

# Turn off debug mode in production
DEBUG = False

# List of allowed hosts for the project
ALLOWED_HOSTS = [
    "8000-tendam-recipehaven-jewf8wckm85.ws.codeinstitute-ide.net",
    ".herokuapp.com"
]


# Installed applications for the project
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'cloudinary_storage',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'crispy_forms',
    'crispy_bootstrap5',
    'blog',
    'django_summernote',
    'cloudinary',
    'about',
    'contact',
    'faq',
    'share',
    'profiles',
]

# Django site ID (used with allauth)
SITE_ID = 1

# Redirect URLs for login/logout
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# Crispy Forms configuration for Bootstrap5
CRISPY_TEMPLATE_PACK = 'bootstrap4'
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# Middleware used in the project
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

# Root URL configuration
ROOT_URLCONF = 'recipe_haven.urls'

# Template directories and context processors
TEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],  # Template directory defined here
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI application definition
WSGI_APPLICATION = 'recipe_haven.wsgi.application'

# Database configuration
DATABASES = {
    'default': dj_database_url.parse(os.environ.get("DATABASE_URL"))
}

# Trusted CSRF origins
CSRF_TRUSTED_ORIGINS = [
    "https://*.codeinstitute-ide.net/",
    "https://*.herokuapp.com"
]

# Password validation configuration
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.'
                'UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.'
                'MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.'
                'CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.'
                'NumericPasswordValidator',
    },
]


# Account email verification settings (turned off)
ACCOUNT_EMAIL_VERIFICATION = 'none'

# Internationalization settings
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static and media files configuration
STATIC_URL = 'static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]  # Static files directory
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Media file settings for uploaded files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type for models
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
